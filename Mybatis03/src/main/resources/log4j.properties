# 将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码
log4j.rootLogger=DEBUG,console,file

# 配置CONSOLE输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout 
# 配置CONSOLE日志的输出格式  [frame] 2019-08-22 22:52:12,000  %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
log4j.appender.console.layout.ConversionPattern=[frame] %d{yyyy-MM-dd HH:mm:ss,SSS} - %-4r %-5p [%t] %C:%L %x - %m%n

# 输出到日志文件中
log4j.appender.file=org.apache.log4j.RollingFileAppender
# 保存编码格式
log4j.appender.file.Encoding=UTF-8
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.file.File=logs/root.log
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.file.MaxFileSize=10MB
# 设置滚定文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
log4j.appender.file.MaxBackupIndex=3  
# 配置logfile为自定义布局模式
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n

# 输出日志级别(设置mybatis的日志级别)
log4j.logger.org.mybatis=DEBUG

# 对不同的类输出不同的日志文件
# log4j.logger.dao=DEBUG,maserhe
# 设置为false该日志信息就不会加入到rootLogger中了
# log4j.additivity.com.xiaofan.dao=false
# 下面就和上面配置一样了
# log4j.appender.xiaofan=org.apache.log4j.RollingFileAppender
# log4j.appender.xiaofan.Encoding=UTF-8
# log4j.appender.xiaofan.File=logs/xiaofan.log
# log4j.appender.xiaofan.MaxFileSize=10MB
# log4j.appender.xiaofan.MaxBackupIndex=3
# log4j.appender.xiaofan.layout=org.apache.log4j.PatternLayout
# log4j.appender.xiaofan.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n